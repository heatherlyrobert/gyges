#!/usr/local/bin/koios
#   koios-polos (northern axis) -- c unit testing metaprogram and mini-language
#   program under test  : gyges
#   auto-generated script file converted from a previous script version
#   updated to the most recent version (v21)



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
PREP          v21  include the prototype headers                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       v21  include public header                gyges.h               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) literal arithmetic [ 8] +, -, *, /, %, --, ++, -:   CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((14.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   GROUP      v21  start simple                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  add an integer                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0, 10, 10, "+5"                                              p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=n f=? d=0 a=< c=  0 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   2) :+5:                                         
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           5.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   0) .                                            

   COND       v21  change to a simple formula                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=30*30"                                          p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   6) :=30*30:                                     
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         900.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   3) =,30,30,*                                    

   COND       v21  change back to an integer                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "42"                                              p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=n f=? d=0 a=< c=  0 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   2) :42:                                         
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          42.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   0) .                                            

   COND       v21  modulus (integer)                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=5%3"                                            p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   4) :=5%3:                                       
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           2.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   3) =,5,3,%                                      

   COND       v21  increment                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=++5"                                            p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  2 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   4) :=++5:                                       
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           6.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   2) =,5,++                                       

   COND       v21  decrement                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=--5"                                            p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  2 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   4) :=--5:                                       
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           4.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   2) =,5,--                                       

   GROUP      v21  bigger formulas, more terms                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  basic formula with more steps                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=30*30*2+5"                                      p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  10) :=30*30*2+5:                                 
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :        1805.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,30,30,*,2,*,5,+                            

   COND       v21  same formula using precedence                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=30*30+2*5"                                      p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  10) :=30*30+2*5:                                 
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         910.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,30,30,*,2,5,*,+                            

   COND       v21  use parens to change precedence                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=30*30*(2+5)"                                    p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  12) :=30*30*(2+5):                               
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :        6300.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,30,30,*,2,5,+,*                            

   COND       v21  addition and subtraction are equal (tricky)                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=10-3+2"                                         p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   7) :=10-3+2:                                    
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           9.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,10,3,-,2,+                                 

   COND       v21  addition and multipication order (subtle)                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=1+2*3"                                          p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   6) :=1+2*3:                                     
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           7.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,1,2,3,*,+                                  

   COND       v21  multiplcation and addition                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=2+3*4"                                          p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   6) :=2+3*4:                                     
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          14.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,2,3,4,*,+                                  

   COND       v21  multiplcation and addition (order change)                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=3*4+2"                                          p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   6) :=3*4+2:                                     
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          14.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,3,4,*,2,+                                  

   COND       v21  multiplcation and addition (with parens)                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=(2+3)*4"                                        p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   8) :=(2+3)*4:                                   
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          20.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,2,3,+,4,*                                  

   COND       v21  combination                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=4+5*6/3"                                        p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   8) :=4+5*6/3:                                   
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          14.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,4,5,6,*,3,/,+                              

   COND       v21  combination with unary minus (high precidence)               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=-(2+3)*4"                                       p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   9) :=-(2+3)*4:                                  
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         -20.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   6) =,2,3,+,-:,4,*                               

   COND       v21  combination with unary minus (grouped to be last)            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=-((2+3)*4)"                                     p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  11) :=-((2+3)*4):                                
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         -20.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   6) =,2,3,+,4,*,-:                               

   GROUP      v21  challenge round                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  CSCI270 : example one                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=1+2*3-4/5*6"                                    p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c= 11 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  12) :=1+2*3-4/5*6:                               
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           2.200000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (  11) =,1,2,3,*,+,4,5,/,6,*,-                      

   COND       v21  CSCI270 : example two                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=(1+2*3-4)/(5*6)"                                p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c= 11 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  16) :=(1+2*3-4)/(5*6):                           
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           0.100000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (  11) =,1,2,3,*,+,4,-,5,6,*,/                      

   COND       v21  CSCI270 : variation                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=1*(2+3)-4/5"                                    p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  9 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  12) :=1*(2+3)-4/5:                               
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           4.200000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   9) =,1,2,3,+,*,4,5,/,-                          

   COND       v21  art of assemply : example one                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=(1*2-3+4)/2.0"                                  p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  9 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  14) :=(1*2-3+4)/2.0:                             
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           1.500000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   9) =,1,2,*,3,-,4,+,2.0,/                        

   COND       v21  art of assemply : example two                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=((4-5)*1)-(1+2*3)/3.14159"                      p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c= 13 r=  0 d=  0                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  26) :=((4-5)*1)-(1+2*3)/3.14159:                 
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          -3.228171                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (  13) =,4,5,-,1,*,1,2,3,*,+,3.14159,/,-            

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) cellref arithmetic [ 8] +, -, *, /, %, --, ++, -:   CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((14.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  add source data cells                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  0, "1"                                               p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  1, "2"                                               p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  2, "3"                                               p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  3, "4"                                               p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  4, "5"                                               p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  5, "6"                                               p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  9, "10"                                              p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0, 29, "30"                                              p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0, 41, "42"                                              p_exists    0                                                                      

   GROUP      v21  start simple                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  add an integer                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0, 10, 10, "=a5"                                             p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  1 r=  1 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   3) :=a5:                                        
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           5.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   1) =,0a5                                        

   COND       v21  change to a simple formula                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a30*a30"                                        p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  3 r=  1 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   8) :=a30*a30:                                   
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         900.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   3) =,0a30,0a30,*                                

   COND       v21  change back to an integer                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a42"                                            p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  1 r=  1 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   4) :=a42:                                       
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          42.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   1) =,0a42                                       

   COND       v21  modulus (integer)                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a5%a3"                                          p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  3 r=  2 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   6) :=a5%a3:                                     
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           2.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   3) =,0a5,0a3,%                                  

   COND       v21  increment                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=++a5"                                           p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  2 r=  1 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   5) :=++a5:                                      
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           6.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   2) =,0a5,++                                     

   COND       v21  decrement                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=--a5"                                           p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  2 r=  1 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   5) :=--a5:                                      
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           4.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   2) =,0a5,--                                     

   GROUP      v21  bigger formulas, more terms                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  basic formula with more steps                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a30*a30*a2+a5"                                  p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  14) :=a30*a30*a2+a5:                             
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :        1805.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,0a30,0a30,*,0a2,*,0a5,+                    

   COND       v21  same formula using precedence                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a30*a30+a2*a5"                                  p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  14) :=a30*a30+a2*a5:                             
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         910.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,0a30,0a30,*,0a2,0a5,*,+                    

   COND       v21  use parens to change precedence                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a30*a30*(a2+a5)"                                p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  16) :=a30*a30*(a2+a5):                           
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :        6300.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,0a30,0a30,*,0a2,0a5,+,*                    

   COND       v21  addition and subtraction are equal (tricky)                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a10-a3+a2"                                      p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  10) :=a10-a3+a2:                                 
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           9.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,0a10,0a3,-,0a2,+                           

   COND       v21  addition and multipication order (subtle)                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a1+a2*a3"                                       p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   9) :=a1+a2*a3:                                  
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           7.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,0a1,0a2,0a3,*,+                            

   COND       v21  multiplcation and addition                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a2+a3*a4"                                       p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   9) :=a2+a3*a4:                                  
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          14.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,0a2,0a3,0a4,*,+                            

   COND       v21  multiplcation and addition (order change)                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a3*a4+a2"                                       p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (   9) :=a3*a4+a2:                                  
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          14.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,0a3,0a4,*,0a2,+                            

   COND       v21  multiplcation and addition (with parens)                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=(a2+a3)*a4"                                     p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  5 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  11) :=(a2+a3)*a4:                                
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          20.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   5) =,0a2,0a3,+,0a4,*                            

   COND       v21  combination                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a4+a5*a6/a3"                                    p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  7 r=  4 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  12) :=a4+a5*a6/a3:                               
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          14.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   7) =,0a4,0a5,0a6,*,0a3,/,+                      

   COND       v21  combination with unary minus (high precidence)               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=-(a2+a3)*a4"                                    p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  6 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  12) :=-(a2+a3)*a4:                               
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         -20.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   6) =,0a2,0a3,+,-:,0a4,*                         

   COND       v21  combination with unary minus (grouped to be last)            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=-((a2+a3)*a4)"                                  p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  6 r=  3 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  14) :=-((a2+a3)*a4):                             
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :         -20.000000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   6) =,0a2,0a3,+,0a4,*,-:                         

   GROUP      v21  challenge round                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  CSCI270 : example one                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a1+a2*a3-a4/a5*a6"                              p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c= 11 r=  6 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  18) :=a1+a2*a3-a4/a5*a6:                         
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           2.200000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (  11) =,0a1,0a2,0a3,*,+,0a4,0a5,/,0a6,*,-          

   COND       v21  CSCI270 : example two                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=(a1+a2*a3-a4)/(a5*a6)"                          p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c= 11 r=  6 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  22) :=(a1+a2*a3-a4)/(a5*a6):                     
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           0.100000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (  11) =,0a1,0a2,0a3,*,+,0a4,-,0a5,0a6,*,/          

   COND       v21  CSCI270 : variation                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=a1*(a2+a3)-a4/a5"                               p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  9 r=  5 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  17) :=a1*(a2+a3)-a4/a5:                          
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           4.200000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   9) =,0a1,0a2,0a3,+,*,0a4,0a5,/,-                

   COND       v21  art of assemply : example one                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=(a1*a2-a3+a4)/2.0"                              p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c=  9 r=  4 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  18) :=(a1*a2-a3+a4)/2.0:                         
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :           1.500000                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (   9) =,0a1,0a2,*,0a3,-,0a4,+,2.0,/                

   COND       v21  art of assemply : example two                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=((a4-a5)*a1)-(a1+a2*a3)/3.14159"                p_exists    0                                                                      
     get      v21  check the cell info                  CELL__unitnew         "cell_info"      , "k11"                                                s_equal     s_celln info     : t=f f=? d=0 a=< c= 13 r=  5 d=  1                   
     get      v21  check the cell source                CELL__unitnew         "cell_source"    , "k11"                                                s_equal     s_celln source   : (  32) :=((a4-a5)*a1)-(a1+a2*a3)/3.14159:           
     get      v21  check the cell value                 CELL__unitnew         "cell_value"     , "k11"                                                s_equal     s_celln value    :          -3.228171                                  
     get      v21  check the cell rpn                   CELL__unitnew         "cell_rpn"       , "k11"                                                s_equal     s_celln rpn      : (  13) =,0a4,0a5,-,0a1,*,0a1,0a2,0a3,*,+,3.14159,/,- 

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) basic logical    [ 4] &&, ||, !, if                 CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((15.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            
     get      v21  review the deps linked list          DEP_unit              "dep_pointers"   , "root"                                               s_equal     s_dep pointers   : num=   0, head=    (nil), tail=    (nil)            
     get      v21  review the deps links count          DEP_unit              "dep_count"      , "root"                                               s_equal     s_dep count      : num=   0, fore=   0, back=   0                      

   COND       v21  setup some testing variables                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  create a custom expect string        - - - - - - - - - -   char custom[2000];                                                                                                                                             
     code     v21  create a pointer to one cell         - - - - - - - - - -   tCELL *x_one  = NULL;                                                                                                                                          

   COND       v21  add first cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL__create          0, 10, 10                                                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_one  = yUNIT_p_rc;                                                                                                                                           
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (    0) :%-.40s:", "(null)");                                                                                              
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=- f=? d=0 a=? c=  0 r=  0 d=  0                   

   COND       v21  basic AND (1 vs 1)               TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=1&&1"                                           p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=1&&1");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,1,1,&&                                      

   COND       v21  basic AND (1 vs 0)               FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=1&&0"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=1&&0");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,1,0,&&                                      

   COND       v21  basic AND (0 vs 1)               FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=0&&1"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=0&&1");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,0,1,&&                                      

   COND       v21  basic AND (0 vs 0)               FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=0&&0"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=0&&0");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,0,0,&&                                      

   COND       v21  basic AND (one big number)       FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=12&&0"                                         p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   6, "=12&&0");                                                                                           
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,12,0,&&                                     

   COND       v21  basic AND (one neg number)       FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=0&&-5"                                         p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   6, "=0&&-5");                                                                                           
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  4 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  4) =,0,5,-:,&&                                   

   COND       v21  basic AND (one pos, one neg)     TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=7&&-5"                                         p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   6, "=7&&-5");                                                                                           
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  4 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  4) =,7,5,-:,&&                                   

   COND       v21  basic AND (both negative)        TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=-24&&-5"                                         p_exists    0                                                                    
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   8, "=-24&&-5");                                                                                         
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  5) =,24,-:,5,-:,&&                               

   COND       v21  basic OR  (1 vs 1)               TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=1||1"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=1||1");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,1,1,||                                      

   COND       v21  basic OR  (1 vs 0)               TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=1||0"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=1||0");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,1,0,||                                      

   COND       v21  basic OR  (0 vs 1)               TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=0||1"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=0||1");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,0,1,||                                      

   COND       v21  basic OR  (0 vs 0)               FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=0||0"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=0||0");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,0,0,||                                      

   COND       v21  basic OR  (one big number)       TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=0||678"                                        p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   7, "=0||678");                                                                                          
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,0,678,||                                    

   COND       v21  basic OR  (one neg number)       TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=-59||0"                                        p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   7, "=-59||0");                                                                                          
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  4 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  4) =,59,-:,0,||                                  

   COND       v21  basic OR  (neg and pos)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=-59||6"                                        p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   7, "=-59||6");                                                                                          
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  4 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  4) =,59,-:,6,||                                  

   COND       v21  basic NOT (0)                    TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!0"                                            p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   3, "=!0");                                                                                              
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  2 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  2) =,0,!                                         

   COND       v21  basic NOT (1)                    FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!1"                                            p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   3, "=!1");                                                                                              
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  2 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  2) =,1,!                                         

   COND       v21  basic NOT (negative)             FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!-20"                                          p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   5, "=!-20");                                                                                            
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  3 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  3) =,20,-:,!                                     

   COND       v21  basic NOT (big number)           FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!5476"                                         p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   6, "=!5476");                                                                                           
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  2 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  2) =,5476,!                                      

   COND       v21  ANDs before ORs                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=1&&0||1"                                       p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   8, "=1&&0||1");                                                                                         
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  5) =,1,0,&&,1,||                                 

   COND       v21  ANDs before ORs                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=1||0&&1"                                       p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   8, "=1||0&&1");                                                                                         
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  5 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  5) =,1,0,1,&&,||                                 

   COND       v21  NOTs before both                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!1||0&&1"                                      p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",   9, "=!1||0&&1");                                                                                        
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  6) =,1,!,0,1,&&,||                               

   COND       v21  parens to override                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!(1||(0&&1))"                                  p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",  13, "=!(1||(0&&1))");                                                                                    
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  6) =,1,0,1,&&,||,!                               

   COND       v21  parens to override                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=!((1||0)&&1)"                                  p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",  13, "=!((1||0)&&1)");                                                                                    
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  6) =,1,0,||,1,&&,!                               

   COND       v21  use the IF statement (TRUE)                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=if(1&&1,20,50)"                                p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",  15, "=if(1&&1,20,50)");                                                                                  
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :          20.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  6) =,1,1,&&,20,50,if                             

   COND       v21  use the IF statement (FALSE)                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=if(1&&0,20,50)"                                p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",  15, "=if(1&&0,20,50)");                                                                                  
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c=  6 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :          50.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  6) =,1,0,&&,20,50,if                             

   COND       v21  use the IF statement (NESTED)                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT,  0, 10, 10, "=if(1&&0,20,if(1||0,50,10))"                    p_exists    0                                                                      
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (%5d) :%-.40s:",  27, "=if(1&&0,20,if(1||0,50,10))");                                                                      
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=f f=? d=0 a=< c= 11 r=  0 d=  0                   
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :          50.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : ( 11) =,1,0,&&,20,1,0,||,50,10,if,if                

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) numeric relational [ 7] ==, <, >, <=, >=, !=, if    CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((16.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            
     get      v21  review the deps linked list          DEP_unit              "dep_pointers"   , "root"                                               s_equal     s_dep pointers   : num=   0, head=    (nil), tail=    (nil)            
     get      v21  review the deps links count          DEP_unit              "dep_count"      , "root"                                               s_equal     s_dep count      : num=   0, fore=   0, back=   0                      

   COND       v21  setup some testing variables                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  create a custom expect string        - - - - - - - - - -   char custom[2000];                                                                                                                                             
     code     v21  create a pointer to one cell         - - - - - - - - - -   tCELL *x_one  = NULL;                                                                                                                                          
     code     v21  create a pointer to another cell     - - - - - - - - - -   tCELL *x_two  = NULL;                                                                                                                                          
     code     v21  create a pointer to a third cell     - - - - - - - - - -   tCELL *x_thr  = NULL;                                                                                                                                          
     code     v21  create a pointer to a fourth cell    - - - - - - - - - -   tCELL *x_fou  = NULL;                                                                                                                                          
     code     v21  create a pointer to a fifth cell     - - - - - - - - - -   tCELL *x_fif  = NULL;                                                                                                                                          

   COND       v21  change environment                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     code     v21  modify debugging                     - - - - - - - - - -   debug.calc = 'n';                                                                                                                                              

   COND       v21  change to three worksheets                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  modify a variable                    - - - - - - - - - -   my.ntab = 5;                                                                                                                                                   

   COND       v21  add first cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "20.156"                                          p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_one  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  add second cell                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 1, 10, 10, "20.158"                                          p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_two  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  add third cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 2, 10, 10, "20.159"                                          p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_thr  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  add fourth cell                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 3, 10, 10, "20.158"                                          p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fou  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  review cell list                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   5, num=   4, fore=   4, back=   4            
     code     v21  create a custome expect string       - - - - - - - - - -   sprintf(CUSTOM, "Cell Linked List : n=   4, h=%9p, t=%9p", x_one , x_fou );                                                                                    
     get      v21  review the cell linked list          unit_accessor         "cell_list",     NULL                                                   s_equal     [[ CUSTOM ]]                                                           

   COND       v21  equality (==) when a <  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 == 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fif  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,==                                

   COND       v21  review cell list                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   6, num=   5, fore=   5, back=   5            
     code     v21  create a custome expect string       - - - - - - - - - -   sprintf(CUSTOM, "Cell Linked List : n=   5, h=%9p, t=%9p", x_one , x_fif );                                                                                    
     get      v21  review the cell linked list          unit_accessor         "cell_list",     NULL                                                   s_equal     [[ CUSTOM ]]                                                           

   COND       v21  equality (==) when a >  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 == 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,2k11,1k11,==                                

   COND       v21  equality (==) when a == b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 == 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,3k11,1k11,==                                

   COND       v21  lesser   (< ) when a <  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 <  1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fif  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,<                                 

   COND       v21  lesser   (< ) when a >  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 <  1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,2k11,1k11,<                                 

   COND       v21  lesser   (< ) when a == b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 <  1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,3k11,1k11,<                                 

   COND       v21  less eq  (<=) when a <  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 <= 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fif  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,<=                                

   COND       v21  less eq  (<=) when a >  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 <= 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,2k11,1k11,<=                                

   COND       v21  less eq  (<=) when a == b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 <= 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,3k11,1k11,<=                                

   COND       v21  greater  (> ) when a <  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 >  1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fif  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,>                                 

   COND       v21  greater  (> ) when a >  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 >  1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,2k11,1k11,>                                 

   COND       v21  greater  (> ) when a == b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 >  1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,3k11,1k11,>                                 

   COND       v21  great eq (>=) when a <  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 >= 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fif  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,>=                                

   COND       v21  great eq (>=) when a >  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 >= 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,2k11,1k11,>=                                

   COND       v21  great eq (>=) when a == b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.025))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 >= 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,3k11,1k11,>=                                

   COND       v21  not eq   (!=) when a <  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.026))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 != 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_fif  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,!=                                

   COND       v21  not eq   (!=) when a >  b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.027))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 != 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,2k11,1k11,!=                                

   COND       v21  not eq   (!=) when a == b                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.028))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 != 1k11)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_fif                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_fif                                                  s_equal     Cell RPN         : (  3) =,3k11,1k11,!=                                

   COND       v21  review cell list                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.029))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   6, num=   5, fore=   5, back=   5            
     code     v21  create a custome expect string       - - - - - - - - - -   sprintf(CUSTOM, "Cell Linked List : n=   5, h=%9p, t=%9p", x_one , x_fif );                                                                                    
     get      v21  review the cell linked list          unit_accessor         "cell_list",     NULL                                                   s_equal     [[ CUSTOM ]]                                                           

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.030))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.031))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) string relational [ 5] ==, #<, #>, #=, #!, ifs      CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((16.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            
     get      v21  review the deps linked list          DEP_unit              "dep_pointers"   , "root"                                               s_equal     s_dep pointers   : num=   0, head=    (nil), tail=    (nil)            
     get      v21  review the deps links count          DEP_unit              "dep_count"      , "root"                                               s_equal     s_dep count      : num=   0, fore=   0, back=   0                      

   COND       v21  setup some testing variables                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  create a custom expect string        - - - - - - - - - -   char custom[2000];                                                                                                                                             
     code     v21  create a pointer to one cell         - - - - - - - - - -   tCELL *x_1st  = NULL;                                                                                                                                          
     code     v21  create a pointer to another cell     - - - - - - - - - -   tCELL *x_2nd  = NULL;                                                                                                                                          
     code     v21  create a pointer to a third cell     - - - - - - - - - -   tCELL *x_3rd  = NULL;                                                                                                                                          
     code     v21  create a pointer to a fourth cell    - - - - - - - - - -   tCELL *x_4th  = NULL;                                                                                                                                          
     code     v21  create a pointer to a fifth cell     - - - - - - - - - -   tCELL *x_5th  = NULL;                                                                                                                                          

   COND       v21  change environment                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     code     v21  modify debugging                     - - - - - - - - - -   debug.calc = 'n';                                                                                                                                              

   COND       v21  change to three worksheets                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  modify a variable                    - - - - - - - - - -   my.ntab = 5;                                                                                                                                                   

   COND       v21  add first cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "one"                                             p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_1st  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  add second cell                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 1, 10, 10, "onetwo"                                          p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_2nd  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  add third cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 2, 10, 10, "two"                                             p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_3rd  = yUNIT_p_rc;                                                                                                                                           

   COND       v21  add fourth cell                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 3, 10, 10, "three"                                           p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_4th  = yUNIT_p_rc;                                                                                                                                           

   GROUP      v21  equality tests                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  numeric equality (==)            TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 == 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,==                                

   COND       v21  numeric greater  (> )            FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 >  1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,>                                 

   COND       v21  string equality  (#=)            FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 #= 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,#=                                

   COND       v21  string equality  (#=)            TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #= 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,1k11,#=                                

   COND       v21  string equality  (#=)            FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #= 2k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,2k11,#=                                

   COND       v21  string equality  (#=)            FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 #= 3k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,2k11,3k11,#=                                

   GROUP      v21  inequality tests                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  numeric inequality (!=)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 != 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,!=                                

   COND       v21  numeric lesser   (< )            FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 <  1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,<                                 

   COND       v21  string inequality  (#!)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 #! 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,#!                                

   COND       v21  string inequality  (#!)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #! 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,1k11,#!                                

   COND       v21  string inequality  (#!)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #! 2k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,2k11,#!                                

   COND       v21  string inequality  (#!)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 #! 3k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,2k11,3k11,#!                                

   GROUP      v21  lesser tests                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  string lesser      (#<)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 #< 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,#<                                

   COND       v21  string lesser      (#<)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #< 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,1k11,#<                                

   COND       v21  string lesser      (#<)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #< 2k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,2k11,#<                                

   COND       v21  string lesser      (#<)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 #< 3k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,2k11,3k11,#<                                

   COND       v21  string lesser      (#<)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 #< 0k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,3k11,0k11,#<                                

   GROUP      v21  greater tests                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  string greater     (#>)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 0k11 #> 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,0k11,1k11,#>                                

   COND       v21  string greater     (#>)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #> 1k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,1k11,#>                                

   COND       v21  string greater     (#>)          FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 1k11 #> 2k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,1k11,2k11,#>                                

   COND       v21  string greater     (#>)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 2k11 #> 3k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,2k11,3k11,#>                                

   COND       v21  string greater     (#>)          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ( 3k11 #> 0k11)"                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  3) =,3k11,0k11,#>                                

   GROUP      v21  if for strings                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  if normal                        FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= if  ( 0k11 #> 1k11, 0k11, 1k11)"               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's string              unit_accessor         "cell_printable",x_5th                                                  s_equal     Cell Printable   : (   8) :0       :                                   
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  6) =,0k11,1k11,#>,0k11,1k11,if                   

   COND       v21  if normal                        TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= if  ( 0k11 #< 1k11, 0k11, 1k11)"               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's string              unit_accessor         "cell_printable",x_5th                                                  s_equal     Cell Printable   : (   8) :0       :                                   
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  6) =,0k11,1k11,#<,0k11,1k11,if                   

   COND       v21  if for strings, but num formula  FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "= ifs ( 0k11 #> 1k11, 0k11, 1k11)"               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's string              unit_accessor         "cell_printable",x_5th                                                  s_equal     Cell Printable   : (   8) :0       :                                   
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  6) =,0k11,1k11,#>,0k11,1k11,ifs                  

   COND       v21  if for strings                   FALSE                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "# ifs ( 0k11 #> 1k11, 0k11, 1k11)"               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's string              unit_accessor         "cell_printable",x_5th                                                  s_equal     Cell Printable   : (   8) :onetwo  :                                   
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  6) #,0k11,1k11,#>,0k11,1k11,ifs                  

   COND       v21  if for strings                   TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "# ifs ( 0k11 #< 1k11, 0k11, 1k11)"               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's string              unit_accessor         "cell_printable",x_5th                                                  s_equal     Cell Printable   : (   8) :one     :                                   
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  6) #,0k11,1k11,#<,0k11,1k11,ifs                  

   COND       v21  if for strings, num comparison   TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 4, 10, 10, "# ifs ( 0k11  < 1k11, 0k11, 1k11)"               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_5th  = yUNIT_p_rc;                                                                                                                                           
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_5th                                                  s_equal     Cell Value       :           0.000000                                  
     get      v21  check the cell's string              unit_accessor         "cell_printable",x_5th                                                  s_equal     Cell Printable   : (   8) :onetwo  :                                   
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_5th                                                  s_equal     Cell RPN         : (  6) #,0k11,1k11,<,0k11,1k11,ifs                   

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.030))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.031))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            




#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) basic trig       [19] sin, cos, tan, deg, rad, ...  CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((17.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            
     get      v21  review the deps linked list          DEP_unit              "dep_pointers"   , "root"                                               s_equal     s_dep pointers   : num=   0, head=    (nil), tail=    (nil)            
     get      v21  review the deps links count          DEP_unit              "dep_count"      , "root"                                               s_equal     s_dep count      : num=   0, fore=   0, back=   0                      

   COND       v21  setup environment and test variables                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  create a custom expect string        - - - - - - - - - -   char custom[2000];                                                                                                                                             
#    code     v21  modify debugging                     - - - - - - - - - -   debug.calc = 'n';                                                                                                                                              
     code     v21  modify a variable                    - - - - - - - - - -   my.ntab = 5;                                                                                                                                                   

   COND       v21  add the source cell and formulas                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "0"                                               p_exists    0                                                                      
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  6,  5, "=sin(0f6)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0g6"                                                s_equal     s_celln rpn      : (   2) =,0f6,sin                                    
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  6,  6, "=cos(0f6)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0g7"                                                s_equal     s_celln rpn      : (   2) =,0f6,cos                                    
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  6,  7, "=tan(0f6)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0g8"                                                s_equal     s_celln rpn      : (   2) =,0f6,tan                                    
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  6,  8, "=asin(0g6)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0g9"                                                s_equal     s_celln rpn      : (   2) =,0g6,asin                                   
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  6,  9, "=acos(0g7)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0g10"                                               s_equal     s_celln rpn      : (   2) =,0g7,acos                                   
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  6, 10, "=atan(0g8)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0g11"                                               s_equal     s_celln rpn      : (   2) =,0g8,atan                                   
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  7,  5, "=rad(0f6)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0h6"                                                s_equal     s_celln rpn      : (   2) =,0f6,rad                                    
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  8,  5, "=sinr(0h6)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0i6"                                                s_equal     s_celln rpn      : (   2) =,0h6,sinr                                   
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  8,  6, "=cosr(0h6)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0i7"                                                s_equal     s_celln rpn      : (   2) =,0h6,cosr                                   
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  8,  7, "=tanr(0h6)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0i8"                                                s_equal     s_celln rpn      : (   2) =,0h6,tanr                                   
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  8,  8, "=asinr(0i6)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0i9"                                                s_equal     s_celln rpn      : (   2) =,0i6,asinr                                  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  8,  9, "=acosr(0i7)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0i10"                                               s_equal     s_celln rpn      : (   2) =,0i7,acosr                                  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  8, 10, "=atanr(0i8)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0i11"                                               s_equal     s_celln rpn      : (   2) =,0i8,atanr                                  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  9,  5, "=deg (0h6)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "0j6"                                                s_equal     s_celln rpn      : (   2) =,0h6,deg                                    

   COND       v21  review dependencies                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      v21  review the requires root             DEP_unit              "cell_requires"  ,  "root"                                              s_equal     s_dep requires   : root  ( 7) ,0g9,0g10,0g11,0i9,0i10,0i11,0j6,        
     get      v21  review the provides root             DEP_unit              "cell_provides"  ,  "root"                                              s_equal     s_dep provides   : root  ( 0) .                                        
     get      v21  review the requires 0f6              DEP_unit              "cell_requires"  ,  "0f6"                                               s_equal     s_dep requires   : 0f6   ( 0) .                                        
     get      v21  review the provides 0f6              DEP_unit              "cell_provides"  ,  "0f6"                                               s_equal     s_dep provides   : 0f6   ( 4) ,0g6,0g7,0g8,0h6,                        
     get      v21  review the requires 0g6              DEP_unit              "cell_requires"  ,  "0g6"                                               s_equal     s_dep requires   : 0g6   ( 1) ,0f6,                                    
     get      v21  review the provides 0g6              DEP_unit              "cell_provides"  ,  "0g6"                                               s_equal     s_dep provides   : 0g6   ( 1) ,0g9,                                    
     get      v21  review the requires 0g7              DEP_unit              "cell_requires"  ,  "0g7"                                               s_equal     s_dep requires   : 0g7   ( 1) ,0f6,                                    
     get      v21  review the provides 0g7              DEP_unit              "cell_provides"  ,  "0g7"                                               s_equal     s_dep provides   : 0g7   ( 1) ,0g10,                                   
     get      v21  review the requires 0g8              DEP_unit              "cell_requires"  ,  "0g8"                                               s_equal     s_dep requires   : 0g8   ( 1) ,0f6,                                    
     get      v21  review the provides 0g8              DEP_unit              "cell_provides"  ,  "0g8"                                               s_equal     s_dep provides   : 0g8   ( 1) ,0g11,                                   
     get      v21  review the requires 0g9              DEP_unit              "cell_requires"  ,  "0g9"                                               s_equal     s_dep requires   : 0g9   ( 1) ,0g6,                                    
     get      v21  review the provides 0g9              DEP_unit              "cell_provides"  ,  "0g9"                                               s_equal     s_dep provides   : 0g9   ( 1) ,root,                                   
     get      v21  review the requires 0g10             DEP_unit              "cell_requires"  ,  "0g10"                                              s_equal     s_dep requires   : 0g10  ( 1) ,0g7,                                    
     get      v21  review the provides 0g10             DEP_unit              "cell_provides"  ,  "0g10"                                              s_equal     s_dep provides   : 0g10  ( 1) ,root,                                   
     get      v21  review the requires 0g11             DEP_unit              "cell_requires"  ,  "0g11"                                              s_equal     s_dep requires   : 0g11  ( 1) ,0g8,                                    
     get      v21  review the provides 0g11             DEP_unit              "cell_provides"  ,  "0g11"                                              s_equal     s_dep provides   : 0g11  ( 1) ,root,                                   
     get      v21  review the requires 0h6              DEP_unit              "cell_requires"  ,  "0h6"                                               s_equal     s_dep requires   : 0h6   ( 1) ,0f6,                                    
     get      v21  review the provides 0h6              DEP_unit              "cell_provides"  ,  "0h6"                                               s_equal     s_dep provides   : 0h6   ( 4) ,0i6,0i7,0i8,0j6,                        
     get      v21  review the requires 0i6              DEP_unit              "cell_requires"  ,  "0i6"                                               s_equal     s_dep requires   : 0i6   ( 1) ,0h6,                                    
     get      v21  review the provides 0i6              DEP_unit              "cell_provides"  ,  "0i6"                                               s_equal     s_dep provides   : 0i6   ( 1) ,0i9,                                    
     get      v21  review the requires 0i7              DEP_unit              "cell_requires"  ,  "0i7"                                               s_equal     s_dep requires   : 0i7   ( 1) ,0h6,                                    
     get      v21  review the provides 0i7              DEP_unit              "cell_provides"  ,  "0i7"                                               s_equal     s_dep provides   : 0i7   ( 1) ,0i10,                                   
     get      v21  review the requires 0i8              DEP_unit              "cell_requires"  ,  "0i8"                                               s_equal     s_dep requires   : 0i8   ( 1) ,0h6,                                    
     get      v21  review the provides 0i8              DEP_unit              "cell_provides"  ,  "0i8"                                               s_equal     s_dep provides   : 0i8   ( 1) ,0i11,                                   
     get      v21  review the requires 0i9              DEP_unit              "cell_requires"  ,  "0i9"                                               s_equal     s_dep requires   : 0i9   ( 1) ,0i6,                                    
     get      v21  review the provides 0i9              DEP_unit              "cell_provides"  ,  "0i9"                                               s_equal     s_dep provides   : 0i9   ( 1) ,root,                                   
     get      v21  review the requires 0i10             DEP_unit              "cell_requires"  ,  "0i10"                                              s_equal     s_dep requires   : 0i10  ( 1) ,0i7,                                    
     get      v21  review the provides 0i10             DEP_unit              "cell_provides"  ,  "0i10"                                              s_equal     s_dep provides   : 0i10  ( 1) ,root,                                   
     get      v21  review the requires 0i11             DEP_unit              "cell_requires"  ,  "0i11"                                              s_equal     s_dep requires   : 0i11  ( 1) ,0i8,                                    
     get      v21  review the provides 0i11             DEP_unit              "cell_provides"  ,  "0i11"                                              s_equal     s_dep provides   : 0i11  ( 1) ,root,                                   
     get      v21  review the requires 0j6              DEP_unit              "cell_requires"  ,  "0j6"                                               s_equal     s_dep requires   : 0j6   ( 1) ,0h6,                                    
     get      v21  review the provides 0j6              DEP_unit              "cell_provides"  ,  "0j6"                                               s_equal     s_dep provides   : 0j6   ( 1) ,root,                                   

   COND       v21  check the initial calculated values                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :           0.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arctangent in radians      CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :           0.000000                                  

   COND       v21  replace the degree/radians cell with same value              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+0"                                              p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :           0.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arctangent in radians      CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :           0.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+15"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          15.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.258819                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.965926                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.267949                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :          15.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :          15.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :          15.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.261799                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.258819                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.965926                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.267949                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           0.261799                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           0.261799                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           0.261799                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          15.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+30"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          30.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.500000                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.866025                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.577350                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :          30.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :          30.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :          30.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.523599                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.500000                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.866025                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.577350                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           0.523599                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           0.523599                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           0.523599                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          30.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+45"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          45.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :          45.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :          45.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :          45.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.785398                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           0.785398                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           0.785398                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           0.785398                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          45.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+60"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          60.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.866025                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.500000                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           1.732051                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :          60.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :          60.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :          60.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           1.047198                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.866025                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.500000                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           1.732051                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           1.047198                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           1.047198                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           1.047198                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          60.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+75"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          75.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.965926                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.258819                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           3.732051                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/1   s_celln value    :          75.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/1   s_celln value    :          75.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/1   s_celln value    :          75.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           1.308997                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.965926                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.258819                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           3.732051                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/1   s_celln value    :           1.308997                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/1   s_celln value    :           1.308997                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           1.308997                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          75.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+90"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          90.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :          90.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          90.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :           0.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           1.570796                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/5   s_celln value    :           0.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           1.570796                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           1.570796                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          90.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+105"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         105.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.965926                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.258819                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -3.732051                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/3   s_celln value    :          75.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/3   s_celln value    :         105.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/3   s_celln value    :         -75.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           1.832596                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.965926                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.258819                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -3.732051                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/3   s_celln value    :           1.308997                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/3   s_celln value    :           1.832596                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/3   s_celln value    :          -1.308997                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         105.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+120"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         120.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.866025                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.500000                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -1.732051                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/3   s_celln value    :          60.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/3   s_celln value    :         120.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/3   s_celln value    :         -60.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           2.094395                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.866025                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.500000                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -1.732051                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/3   s_celln value    :           1.047198                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/3   s_celln value    :           2.094395                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/3   s_celln value    :          -1.047198                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         120.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+135"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         135.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.707107                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/3   s_celln value    :          45.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/3   s_celln value    :         135.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/3   s_celln value    :         -45.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           2.356194                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.707107                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/3   s_celln value    :           0.785398                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/3   s_celln value    :           2.356194                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/3   s_celln value    :          -0.785398                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         135.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+150"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         150.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.500000                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.866025                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -0.577350                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/3   s_celln value    :          30.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/3   s_celln value    :         150.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/3   s_celln value    :         -30.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           2.617994                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.500000                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.866025                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -0.577350                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/3   s_celln value    :           0.523599                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/3   s_celln value    :           2.617994                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/3   s_celln value    :          -0.523599                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         150.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+165"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         165.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.258819                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.965926                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -0.267949                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :          15.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :         165.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :         -15.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           2.879793                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.258819                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.965926                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -0.267949                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           0.261799                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           2.879793                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :          -0.261799                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         165.000000                                  

   COND       v21  add the degree/radians cell with simple value                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+180"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         180.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :           0.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :         180.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          -0.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           3.141593                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           0.000000                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           3.141593                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.000000                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         180.000000                                  

   COND       v21  try a negative degree                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "-45"                                             p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         -45.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :          -0.707107                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :         -45.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          45.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :         -45.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :          -0.785398                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :          -0.707107                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :          -0.785398                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           0.785398                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :          -0.785398                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         -45.000000                                  

   COND       v21  try a negative degree                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "-405"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :        -405.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :          -0.707107                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :         -45.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          45.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :         -45.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :          -7.068583                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :          -0.707107                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :          -1.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :          -0.785398                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           0.785398                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :          -0.785398                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :        -405.000000                                  

   COND       v21  try a negative degree                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+405"                                            p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         405.000000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :          45.000000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          45.000000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          45.000000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           7.068583                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.707107                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           1.000000                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           0.785398                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           0.785398                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.785398                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         405.000000                                  

   COND       v21  try with a decimal place                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+10.4"                                           p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          10.400000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.180519                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.983571                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.183534                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.181514                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.180519                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.983571                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.183534                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          10.400000                                  

   COND       v21  try with two decimal places (round down)                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+10.43"                                          p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          10.430000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.180519                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.983571                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.183534                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.182038                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.180519                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.983571                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.183534                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          10.430000                                  

   COND       v21  try with two decimal places (round up)                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+10.37"                                          p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          10.370000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :           0.180519                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :           0.983571                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.183534                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          10.400000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           0.180991                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :           0.180519                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :           0.983571                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.183534                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.181514                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :          10.370000                                  

   COND       v21  try with another single decimal place                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "+198.6"                                          p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :         198.600000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :          -0.318959                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.947768                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.336537                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :         -18.600000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :         161.400000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          18.600000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :           3.466224                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :          -0.318959                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.947768                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.336537                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :          -0.324631                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           2.816961                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.324631                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :         198.600000                                  

   COND       v21  try with a single decimal place thats negative               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.025))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "-156.8"                                          p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :        -156.800000                                  
     get      v21  check the sine                       CELL__unitnew         "cell_value"     , "0g6"                                                u_round/1   s_celln value    :          -0.393942                                  
     get      v21  check the cosine                     CELL__unitnew         "cell_value"     , "0g7"                                                u_round/1   s_celln value    :          -0.919135                                  
     get      v21  check the tangent                    CELL__unitnew         "cell_value"     , "0g8"                                                u_round/1   s_celln value    :           0.428601                                  
     get      v21  check the arcsine                    CELL__unitnew         "cell_value"     , "0g9"                                                u_round/5   s_celln value    :         -23.200000                                  
     get      v21  check the arccosine                  CELL__unitnew         "cell_value"     , "0g10"                                               u_round/5   s_celln value    :         156.800000                                  
     get      v21  check the arctangent                 CELL__unitnew         "cell_value"     , "0g11"                                               u_round/5   s_celln value    :          23.200000                                  
     get      v21  check the conversion to radians      CELL__unitnew         "cell_value"     , "0h6"                                                u_round/1   s_celln value    :          -2.736676                                  
     get      v21  check the sine of radians            CELL__unitnew         "cell_value"     , "0i6"                                                u_round/1   s_celln value    :          -0.393942                                  
     get      v21  check the cosine of radians          CELL__unitnew         "cell_value"     , "0i7"                                                u_round/1   s_celln value    :          -0.919135                                  
     get      v21  check the tangent of radians         CELL__unitnew         "cell_value"     , "0i8"                                                u_round/1   s_celln value    :           0.428601                                  
     get      v21  check the arcsine in radians         CELL__unitnew         "cell_value"     , "0i9"                                                u_round/5   s_celln value    :          -0.404916                                  
     get      v21  check the arccosine in radians       CELL__unitnew         "cell_value"     , "0i10"                                               u_round/5   s_celln value    :           2.736676                                  
     get      v21  check the artangent in radians       CELL__unitnew         "cell_value"     , "0i11"                                               u_round/5   s_celln value    :           0.404916                                  
     get      v21  check the conversion back to degs    CELL__unitnew         "cell_value"     , "0j6"                                                s_equal     s_celln value    :        -156.800000                                  

   COND       v21  retrieve the constant for PI                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.026))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=pi()"                                           p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :           3.141593                                  

   COND       v21  work a hypotenuse calculation                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.027))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=hypot(12,5)"                                    p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          13.000000                                  

   COND       v21  work a hypotenuse calculation                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.028))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=hypot(14,48)"                                   p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          50.000000                                  

   COND       v21  work a hypotenuse calculation                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.029))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=hypot(6,8)"                                     p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          10.000000                                  

   COND       v21  work a hypotenuse calculation                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.030))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=hypot(3,4)"                                     p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :           5.000000                                  

   COND       v21  work a hypotenuse calculation                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.031))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=hypot(7,8)"                                     p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          10.630146                                  

   COND       v21  work a hypotenuse calculation                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.032))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=hypot(4,3.5)"                                   p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :           5.315073                                  

   COND       v21  work a side calculation                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.033))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=side(13,12)"                                    p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :           5.000000                                  

   COND       v21  work a side calculation                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=side(13,5)"                                     p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          12.000000                                  

   COND       v21  work a side calculation                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.035))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=side(50,48)"                                    p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          14.000000                                  

   COND       v21  work a side calculation                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.036))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  5,  5, "=side(50,14)"                                    p_exists    0                                                                      
     get      v21  check the degree value               CELL__unitnew         "cell_value"     , "0f6"                                                s_equal     s_celln value    :          48.000000                                  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) within and approx logic functions                   CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((16.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((16.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            
     get      v21  review the deps linked list          DEP_unit              "dep_pointers"   , "root"                                               s_equal     s_dep pointers   : num=   0, head=    (nil), tail=    (nil)            
     get      v21  review the deps links count          DEP_unit              "dep_count"      , "root"                                               s_equal     s_dep count      : num=   0, fore=   0, back=   0                      

   COND       v21  setup some testing variables                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     v21  create a pointer to one cell         - - - - - - - - - -   tCELL *x_one  = NULL;                                                                                                                                          

   COND       v21  add first cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL__create          0, 10, 10                                                               p_exists    0                                                                      
     code     v21  save cell pointer                    - - - - - - - - - -   x_one  = yUNIT_p_rc;                                                                                                                                           
     code     v21  create a custom expect string        - - - - - - - - - -   sprintf(CUSTOM, "Cell Source      : (    0) :%-.40s:", "(null)");                                                                                              
     get      v21  check the cell's source string       unit_accessor         "cell_source",   x_one                                                  s_equal     [[ CUSTOM ]]                                                           
     get      v21  check the cell's information         unit_accessor         "cell_info",     x_one                                                  s_equal     Cell Information : t=- f=? d=0 a=? c=  0 r=  0 d=  0                   

   COND       v21  within with three zeros          TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=within(0,0,0)"                                  p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  4) =,0,0,0,within                                

   COND       v21  within with matching positives   TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=within(5,5,5)"                                  p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  4) =,5,5,5,within                                

   COND       v21  within with matching negatives   TRUE                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((15.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0, 10, 10, "=within(-7,-7,-7)"                               p_exists    0                                                                      
     get      v21  check the cell's value               unit_accessor         "cell_value",    x_one                                                  s_equal     Cell Value       :           1.000000                                  
     get      v21  check the cell's RPN version         unit_accessor         "cell_rpn",      x_one                                                  s_equal     Cell RPN         : (  7) =,7,-:,7,-:,7,-:,within                       






   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            







#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) string concatination functions (#, ##)              CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((14.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  add source data cells                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  0, "one"                                             p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  1, "two"                                             p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  2, "three"                                           p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  3, "four"                                            p_exists    0                                                                      

   GROUP      v21  simple string value formulas                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  very basic string formula                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1"                                             p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   1) #,0a1                                        
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   3) :one:                                        

   COND       v21  point at another cell                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a3"                                             p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   1) #,0a3                                        
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   5) :three:                                      

   COND       v21  point at an empty cell                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#d3"                                             p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   1) #,0d3                                        
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           

   GROUP      v21  two object concatination                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  simple concatination                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1#a2"                                          p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,0a2,#                                  
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   6) :onetwo:                                     

   COND       v21  simple concatination with space                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1##a2"                                         p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,0a2,##                                 
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   7) :one two:                                    

   COND       v21  concatination with literal suffix                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1##\"another\""                                p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,\"another\",##                         
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  11) :one another:                                

   COND       v21  concatination with literal prefix                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#\"joking\"#a1"                                  p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,\"joking\",0a1,#                           
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   9) :jokingone:                                  

   GROUP      v21  multiple combinations                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  three cells                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1#a2#a3"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   5) #,0a1,0a2,#,0a3,#                            
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  11) :onetwothree:                                

   COND       v21  three cells mixed operators                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1##a2#a3"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   5) #,0a1,0a2,##,0a3,#                           
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  12) :one twothree:                               

   COND       v21  two cells and a literal                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1##a2#\"done\""                                p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   5) #,0a1,0a2,##,\"done\",#                      
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  11) :one twodone:                                

   COND       v21  four cells                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1#a4#a2##a3"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   7) #,0a1,0a4,#,0a2,#,0a3,##                     
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  16) :onefourtwo three:                           

   COND       v21  three cells, empty cell, and literal                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#a1#\"hubba\"#a2##d7#a3"                         p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   9) #,0a1,\"hubba\",#,0a2,#,0d7,##,0a3,#         
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "b1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  17) :onehubbatwo three:                          

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) string length, left, right, and mid                 CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((14.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  add long string for parsing                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  0, "123456789_123456789_123456789_"                  p_exists    0                                                                      
     get      v21  check the cell's source              CELL__unitnew         "cell_source"    , "a1"                                                 s_equal     s_celln source   : (  30) :123456789_123456789_123456789_:             
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a1"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's modded              CELL__unitnew         "cell_modified"  , "a1"                                                 s_equal     s_celln modded   : (null) ::                                           

   COND       v21  add a positive number                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  2, "+15"                                             p_exists    0                                                                      
     get      v21  check the cell's source              CELL__unitnew         "cell_source"    , "a3"                                                 s_equal     s_celln source   : (   3) :+15:                                        
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a3"                                                 s_equal     s_celln value    :          15.000000                                  
     get      v21  check the cell's modded              CELL__unitnew         "cell_modified"  , "a3"                                                 s_equal     s_celln modded   : (null) ::                                           

   COND       v21  add a float number                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  4, "0.123456"                                        p_exists    0                                                                      
     get      v21  check the cell's source              CELL__unitnew         "cell_source"    , "a5"                                                 s_equal     s_celln source   : (   8) :0.123456:                                   
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a5"                                                 s_equal     s_celln value    :           0.123456                                  
     get      v21  check the cell's modded              CELL__unitnew         "cell_modified"  , "a5"                                                 s_equal     s_celln modded   : (null) ::                                           

   COND       v21  add a numeric formula                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  6, "=a3+a5"                                          p_exists    0                                                                      
     get      v21  check the cell's source              CELL__unitnew         "cell_source"    , "a7"                                                 s_equal     s_celln source   : (   6) :=a3+a5:                                     
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a7"                                                 s_equal     s_celln value    :          15.123456                                  
     get      v21  check the cell's modded              CELL__unitnew         "cell_modified"  , "a7"                                                 s_equal     s_celln modded   : (null) ::                                           

   COND       v21  add a string formula                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  8, "#\"one\"#\"dos\""                                p_exists    0                                                                      
     get      v21  check the cell's source              CELL__unitnew         "cell_source"    , "a9"                                                 s_equal     s_celln source   : (  12) :#\"one\"#\"dos\":                           
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a9"                                                 s_equal     s_celln value    :           0.000000                                  
     get      v21  check the cell's modded              CELL__unitnew         "cell_modified"  , "a9"                                                 s_equal     s_celln modded   : (   6) :onedos:                                     

   GROUP      v21  start with length                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  look at the source string                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  0,  1, "=len(a1)"                                        p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "a2"                                                 s_equal     s_celln rpn      : (   2) =,0a1,len                                    
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a2"                                                 s_equal     s_celln value    :          30.000000                                  

   COND       v21  look at the source string                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  0,  3, "=len(a3)"                                        p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "a4"                                                 s_equal     s_celln rpn      : (   2) =,0a3,len                                    
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a4"                                                 s_equal     s_celln value    :           3.000000                                  

   COND       v21  look at the source string                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  0,  5, "=len(a5)"                                        p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "a6"                                                 s_equal     s_celln rpn      : (   2) =,0a5,len                                    
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a6"                                                 s_equal     s_celln value    :           8.000000                                  

   COND       v21  look at the source string                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  0,  7, "=len(a7)"                                        p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "a8"                                                 s_equal     s_celln rpn      : (   2) =,0a7,len                                    
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a8"                                                 s_equal     s_celln value    :           9.000000                                  

   COND       v21  look at the source string                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  0,  9, "=len(a9)"                                        p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "a10"                                                s_equal     s_celln rpn      : (   2) =,0a9,len                                    
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "a10"                                                s_equal     s_celln value    :           6.000000                                  

   COND       v21  look at the new string                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  2,  0, "=len(b1)"                                        p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "c1"                                                 s_equal     s_celln rpn      : (   2) =,0b1,len                                    
     get      v21  check the cell's value               CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   GROUP      v21  take the left part of the cell                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  take a small part                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,2)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,2,left                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   2) :12:                                         
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           2.000000                                  

   COND       v21  take a larger part                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,9)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,9,left                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   9) :123456789:                                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           9.000000                                  

   COND       v21  take a majority                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,25)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,25,left                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  25) :1234567890123456789012345:                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          25.000000                                  

   COND       v21  take the whole thing                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,30)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,30,left                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  30) :123456789012345678901234567890:             
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          30.000000                                  

   COND       v21  take too much                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,35)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,35,left                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  30) :123456789012345678901234567890:             
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          30.000000                                  

   COND       v21  take zero                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,0)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,0,left                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   COND       v21  take a negative amount                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a1,-1)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,1,-:,left                              
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   COND       v21  take a small part of a integer                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a3,2)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a3,2,left                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   2) :+1:                                         
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           2.000000                                  

   COND       v21  take a small part of a float                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a5,2)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a5,2,left                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   2) :0.:                                         
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           2.000000                                  

   COND       v21  take a small part of a numeric formula                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#left(a7,2)"                                     p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a7,2,left                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   2) :=a:                                         
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           2.000000                                  

   GROUP      v21  take the right part of the cell                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  take a small part                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,2)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,2,right                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   2) :90:                                         
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           2.000000                                  

   COND       v21  take a larger part                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,9)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,9,right                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   9) :234567890:                                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           9.000000                                  

   COND       v21  take a majority                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,25)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,25,right                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  25) :6789012345678901234567890:                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          25.000000                                  

   COND       v21  take the whole thing                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,30)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,30,right                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  30) :123456789012345678901234567890:             
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          30.000000                                  

   COND       v21  take too much                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,35)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,35,right                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  30) :123456789012345678901234567890:             
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          30.000000                                  

   COND       v21  take zero                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,0)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   3) #,0a1,0,right                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   COND       v21  take a negative amount                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#right(a1,-1)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,1,-:,right                             
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   GROUP      v21  take the middle part of the cell                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  take a small part                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,12,2)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,12,2,mid                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   2) :34:                                         
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           2.000000                                  

   COND       v21  take a larger part                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,9,9)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,9,9,mid                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   9) :012345678:                                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           9.000000                                  

   COND       v21  take a majority                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,2,25)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,2,25,mid                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  25) :3456789012345678901234567:                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          25.000000                                  

   COND       v21  take from the start (like left)                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,0,25)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,0,25,mid                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  25) :1234567890123456789012345:                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          25.000000                                  

   COND       v21  take to the end (like right)                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,5,25)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,5,25,mid                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  25) :6789012345678901234567890:                  
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          25.000000                                  

   COND       v21  take past the end                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,2,30)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,2,30,mid                               
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  28) :3456789012345678901234567890:               
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :          28.000000                                  

   COND       v21  start negative                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,-5,10)"                                  p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   5) #,0a1,5,-:,10,mid                            
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   5) :12345:                                      
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           5.000000                                  

   COND       v21  take zero                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,5,0)"                                    p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   4) #,0a1,5,0,mid                                
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   COND       v21  take a negative amount                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mid(a1,5,-1)"                                   p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   5) #,0a1,5,1,-:,mid                             
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (   0) ::                                           
     get      v21  verify with =len(b1) cell            CELL__unitnew         "cell_value"     , "c1"                                                 s_equal     s_celln value    :           0.000000                                  

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) string trimming functions (trim family)             CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((14.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  add source data cells                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  0, "one two    three"                                p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  1, " one   two    three     "                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  2, " one  \" two   \"    three     "                 p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  3, " one  \" two   five \"    three     "            p_exists    0                                                                      

   GROUP      v21  simple left trims                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#ltrim(a1)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,ltrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  16) :one two    three:                           

   COND       v21  lots of unquoted spaceing                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  1, "#ltrim(a2)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b2"                                                 s_equal     s_celln rpn      : (   2) #,0a2,ltrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b2"                                                 s_equal     s_celln modded   : (  23) :one   two    three     :                    

   COND       v21  interal, external, and quoted spacing                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  2, "#ltrim(a3)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b3"                                                 s_equal     s_celln rpn      : (   2) #,0a3,ltrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b3"                                                 s_equal     s_celln modded   : (  28) :one  \" two   \"    three     :             

   COND       v21  interal, external, and quoted intewoven spacing              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  3, "#ltrim(a4)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b4"                                                 s_equal     s_celln rpn      : (   2) #,0a4,ltrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b4"                                                 s_equal     s_celln modded   : (  33) :one  \" two   five \"    three     :        

   COND       v21  empty cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  4, "#ltrim(a5)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b5"                                                 s_equal     s_celln rpn      : (   2) #,0a5,ltrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b5"                                                 s_equal     s_celln modded   : (   0) ::                                           

   COND       v21  null reference                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  5, "#ltrim(NULL)"                                    p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b6"                                                 s_equal     s_celln rpn      : (   2) #,NULL,ltrim                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b6"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  invalid cell                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#ltrim(a0)"                                      p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,a0,ltrim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  literal value                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#ltrim(\" test   one   \")"                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,\" test   one   \",ltrim                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (  13) :test   one   :                              

   COND       v21  concatination                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  7, "#ltrim(a1##\"hey \")"                            p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b8"                                                 s_equal     s_celln rpn      : (   4) #,0a1,\"hey \",##,ltrim                      
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b8"                                                 s_equal     s_celln modded   : (  21) :one two    three hey :                      

   GROUP      v21  simple right trims                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#rtrim(a1)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,rtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  16) :one two    three:                           

   COND       v21  lots of unquoted spaceing                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  1, "#rtrim(a2)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b2"                                                 s_equal     s_celln rpn      : (   2) #,0a2,rtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b2"                                                 s_equal     s_celln modded   : (  19) : one   two    three:                        

   COND       v21  interal, external, and quoted spacing                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  2, "#rtrim(a3)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b3"                                                 s_equal     s_celln rpn      : (   2) #,0a3,rtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b3"                                                 s_equal     s_celln modded   : (  24) : one  \" two   \"    three:                 

   COND       v21  interal, external, and quoted intewoven spacing              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  3, "#rtrim(a4)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b4"                                                 s_equal     s_celln rpn      : (   2) #,0a4,rtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b4"                                                 s_equal     s_celln modded   : (  29) : one  \" two   five \"    three:            

   COND       v21  empty cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  4, "#rtrim(a5)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b5"                                                 s_equal     s_celln rpn      : (   2) #,0a5,rtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b5"                                                 s_equal     s_celln modded   : (   0) ::                                           

   COND       v21  null reference                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  5, "#rtrim(NULL)"                                    p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b6"                                                 s_equal     s_celln rpn      : (   2) #,NULL,rtrim                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b6"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  invalid cell                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#rtrim(a0)"                                      p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,a0,rtrim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  literal value                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#rtrim(\" test   one   \")"                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,\" test   one   \",rtrim                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (  11) : test   one:                                

   COND       v21  concatination                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  7, "#rtrim(a1##\"hey \")"                            p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b8"                                                 s_equal     s_celln rpn      : (   4) #,0a1,\"hey \",##,rtrim                      
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b8"                                                 s_equal     s_celln modded   : (  20) :one two    three hey:                       

   GROUP      v21  trim both ends                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#trim(a1)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,trim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  16) :one two    three:                           

   COND       v21  lots of unquoted spaceing                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  1, "#trim(a2)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b2"                                                 s_equal     s_celln rpn      : (   2) #,0a2,trim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b2"                                                 s_equal     s_celln modded   : (  18) :one   two    three:                         

   COND       v21  interal, external, and quoted spacing                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  2, "#trim(a3)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b3"                                                 s_equal     s_celln rpn      : (   2) #,0a3,trim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b3"                                                 s_equal     s_celln modded   : (  23) :one  \" two   \"    three:                  

   COND       v21  interal, external, and quoted intewoven spacing              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  3, "#trim(a4)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b4"                                                 s_equal     s_celln rpn      : (   2) #,0a4,trim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b4"                                                 s_equal     s_celln modded   : (  28) :one  \" two   five \"    three:             

   COND       v21  empty cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  4, "#trim(a5)"                                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b5"                                                 s_equal     s_celln rpn      : (   2) #,0a5,trim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b5"                                                 s_equal     s_celln modded   : (   0) ::                                           

   COND       v21  null reference                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  5, "#trim(NULL)"                                     p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b6"                                                 s_equal     s_celln rpn      : (   2) #,NULL,trim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b6"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  invalid cell                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#trim(a0)"                                       p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,a0,trim                                    
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  literal value                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#trim(\" test   one   \")"                       p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,\" test   one   \",trim                    
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (  10) :test   one:                                 

   COND       v21  concatination                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  7, "#trim(a1##\"hey \")"                             p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b8"                                                 s_equal     s_celln rpn      : (   4) #,0a1,\"hey \",##,trim                       
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b8"                                                 s_equal     s_celln modded   : (  20) :one two    three hey:                       

   GROUP      v21  trim both ends, plus single interal unquoted                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#strim(a1)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,strim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  13) :one two three:                              

   COND       v21  lots of unquoted spaceing                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  1, "#strim(a2)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b2"                                                 s_equal     s_celln rpn      : (   2) #,0a2,strim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b2"                                                 s_equal     s_celln modded   : (  13) :one two three:                              

   COND       v21  interal, external, and quoted spacing                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  2, "#strim(a3)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b3"                                                 s_equal     s_celln rpn      : (   2) #,0a3,strim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b3"                                                 s_equal     s_celln modded   : (  19) :one \" two   \" three:                      

   COND       v21  interal, external, and quoted intewoven spacing              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  3, "#strim(a4)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b4"                                                 s_equal     s_celln rpn      : (   2) #,0a4,strim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b4"                                                 s_equal     s_celln modded   : (  24) :one \" two   five \" three:                 

   COND       v21  empty cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  4, "#strim(a5)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b5"                                                 s_equal     s_celln rpn      : (   2) #,0a5,strim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b5"                                                 s_equal     s_celln modded   : (   0) ::                                           

   COND       v21  null reference                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  5, "#strim(NULL)"                                    p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b6"                                                 s_equal     s_celln rpn      : (   2) #,NULL,strim                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b6"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  invalid cell                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#strim(a0)"                                      p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,a0,strim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  literal value                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#strim(\" test   one   \")"                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,\" test   one   \",strim                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   8) :test one:                                   

   COND       v21  concatination                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  7, "#strim(a1##\"hey \")"                            p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b8"                                                 s_equal     s_celln rpn      : (   4) #,0a1,\"hey \",##,strim                      
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b8"                                                 s_equal     s_celln modded   : (  17) :one two three hey:                          

   GROUP      v21  trim both ends, plus every interal unquoted                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#etrim(a1)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,etrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  11) :onetwothree:                                

   COND       v21  lots of unquoted spaceing                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  1, "#etrim(a2)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b2"                                                 s_equal     s_celln rpn      : (   2) #,0a2,etrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b2"                                                 s_equal     s_celln modded   : (  11) :onetwothree:                                

   COND       v21  interal, external, and quoted spacing                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  2, "#etrim(a3)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b3"                                                 s_equal     s_celln rpn      : (   2) #,0a3,etrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b3"                                                 s_equal     s_celln modded   : (  17) :one\" two   \"three:                        

   COND       v21  interal, external, and quoted intewoven spacing              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  3, "#etrim(a4)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b4"                                                 s_equal     s_celln rpn      : (   2) #,0a4,etrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b4"                                                 s_equal     s_celln modded   : (  22) :one\" two   five \"three:                   

   COND       v21  empty cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  4, "#etrim(a5)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b5"                                                 s_equal     s_celln rpn      : (   2) #,0a5,etrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b5"                                                 s_equal     s_celln modded   : (   0) ::                                           

   COND       v21  null reference                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  5, "#etrim(NULL)"                                    p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b6"                                                 s_equal     s_celln rpn      : (   2) #,NULL,etrim                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b6"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  invalid cell                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#etrim(a0)"                                      p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,a0,etrim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  literal value                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#etrim(\" test   one   \")"                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,\" test   one   \",etrim                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :testone:                                    

   COND       v21  concatination                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  7, "#etrim(a1##\"hey \")"                            p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b8"                                                 s_equal     s_celln rpn      : (   4) #,0a1,\"hey \",##,etrim                      
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b8"                                                 s_equal     s_celln modded   : (  14) :onetwothreehey:                             

   GROUP      v21  trim both ends, plus every every internal                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#mtrim(a1)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,mtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  11) :onetwothree:                                

   COND       v21  lots of unquoted spaceing                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  1, "#mtrim(a2)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b2"                                                 s_equal     s_celln rpn      : (   2) #,0a2,mtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b2"                                                 s_equal     s_celln modded   : (  11) :onetwothree:                                

   COND       v21  interal, external, and quoted spacing                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  2, "#mtrim(a3)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b3"                                                 s_equal     s_celln rpn      : (   2) #,0a3,mtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b3"                                                 s_equal     s_celln modded   : (  13) :one\"two\"three:                            

   COND       v21  interal, external, and quoted intewoven spacing              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  3, "#mtrim(a4)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b4"                                                 s_equal     s_celln rpn      : (   2) #,0a4,mtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b4"                                                 s_equal     s_celln modded   : (  17) :one\"twofive\"three:                        

   COND       v21  empty cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  4, "#mtrim(a5)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b5"                                                 s_equal     s_celln rpn      : (   2) #,0a5,mtrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b5"                                                 s_equal     s_celln modded   : (   0) ::                                           

   COND       v21  null reference                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  5, "#mtrim(NULL)"                                    p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b6"                                                 s_equal     s_celln rpn      : (   2) #,NULL,mtrim                                 
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b6"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  invalid cell                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#mtrim(a0)"                                      p_null      0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,a0,mtrim                                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :#.build:                                    

   COND       v21  literal value                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  6, "#mtrim(\" test   one   \")"                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b7"                                                 s_equal     s_celln rpn      : (   2) #,\" test   one   \",mtrim                   
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b7"                                                 s_equal     s_celln modded   : (   7) :testone:                                    

   COND       v21  concatination                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  7, "#mtrim(a1##\"hey \")"                            p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b8"                                                 s_equal     s_celln rpn      : (   4) #,0a1,\"hey \",##,mtrim                      
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b8"                                                 s_equal     s_celln modded   : (  14) :onetwothreehey:                             

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)===================================  t  ========(var)======= 
SCRP          v21  (s_calc) alternate cell contents (p,n,f,r)                   CELL_change, RPN_convert, CELL_interpret, CALC_build, CALC_eval         ((14.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  verify program setup                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  setup the program                    PROG_testquiet                                                                                i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  add source data cells                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  0, "one two    three"                                p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  1, "123456789012345678901234567890"                  p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  2, "+15"                                             p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  3, "+147"                                            p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  4, "hysteria"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  5, "  thirty"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  6, "-3.14159"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  7, "checking"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  0,  8, "1234567.89"                                      p_exists    0                                                                      

   COND       v21  add formula cells                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  0, "#a1#a5##a6"                                      p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  1, "123456789012345678901234567890"                  p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  2, "+15"                                             p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  3, "+147"                                            p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  4, "hysteria"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  5, "  thirty"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  6, "-3.14159"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  7, "checking"                                        p_exists    0                                                                      
     exec     v21  add a cell                           CELL_change           CHG_INPUT, 0,  1,  8, "1234567.89"                                      p_exists    0                                                                      

   GROUP      v21  simple left trims                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  only internal, unquoted spaces                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((14.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  change the source string             CELL_change           CHG_INPUT, 0,  1,  0, "#ltrim(a1)"                                      p_exists    0                                                                      
     get      v21  check the cell's RPN version         CELL__unitnew         "cell_rpn"       , "b1"                                                 s_equal     s_celln rpn      : (   2) #,0a1,ltrim                                  
     get      v21  check the cell's results             CELL__unitnew         "cell_modified"  , "b1"                                                 s_equal     s_celln modded   : (  16) :one two    three:                           



   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  purge all cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  purge the cells                      CELL__purge                                                                                   i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0            

   COND       v21  verify program teardown                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((17.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  wrap-up the program                  PROG_testend                                                                                  i_equal     0                                                                      
     get      v21  review the cell linked list          CELL__unit            "cell_list",     NULL                                                   u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)          
     get      v21  review the cell counts               CELL__unit            "cell_count",    NULL                                                   s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0            
