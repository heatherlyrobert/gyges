#!/usr/local/bin/koios
#   koios-polos (north star) -- customized c unit testing meta-program and mini-language
#   program under test  : gyges_cell
#   auto-generated script file converted from a previous script version



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
PREP          include the prototype headers                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include public header                gyges.h                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP    [è2]  (CELL) fundamental cell creation and destruction                   CELL__new, CELL__free                                                                                 ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    1a,    0n,    0f,    0b                                                        

   COND       setup testing variables                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a pointer to the first cell   - - - - - - - - - - - - -   tCELL *x_head = NULL;                                                                                                                                                                                                      
     code     create a pointer to a mid-point      - - - - - - - - - - - - -   tCELL *x_save = NULL;                                                                                                                                                                                                      
     code     create a pointer to one after that   - - - - - - - - - - - - -   tCELL *x_plus = NULL;                                                                                                                                                                                                      
     code     create a pointer to the last cell    - - - - - - - - - - - - -   tCELL *x_tail = NULL;                                                                                                                                                                                                      
     code     create a pointer to an unlinked cel  - - - - - - - - - - - - -   tCELL *x_out  = NULL;                                                                                                                                                                                                      

   COND       test cell validity                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    1a,    0n,    0f,    0b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       add first cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__new                   &x_head, LINKED                                                                                       i_equal     0                                                                                                    
     code     force in a label                     - - - - - - - - - - - - -   x_head->label = strdup ("head");                                                                                                                                                                                           
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    2a,    1n,    1f,    1b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       add another cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__new                   &x_tail, LINKED                                                                                       i_equal     0                                                                                                    
     code     force in a label                     - - - - - - - - - - - - -   x_tail->label = strdup ("tail");                                                                                                                                                                                           
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    3a,    2n,    2f,    2b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       add an unlinked cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__new                   &x_out , UNLINKED                                                                                     i_pass      0                                                                                                    
     code     force in a label                     - - - - - - - - - - - - -   x_out->label  = strdup ("out" );                                                                                                                                                                                           
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    4a,    2n,    2f,    2b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       add another cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__new                   &x_plus, LINKED                                                                                       i_equal     0                                                                                                    
     code     force in a label                     - - - - - - - - - - - - -   x_plus->label = strdup ("plus");                                                                                                                                                                                           
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    5a,    3n,    3f,    3b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : y plus     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : y plus     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       add another cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__new                   &x_save, LINKED                                                                                       i_equal     0                                                                                                    
     code     force in a label                     - - - - - - - - - - - - -   x_save->label = strdup ("save");                                                                                                                                                                                           
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    6a,    4n,    4f,    4b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : y plus     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : y plus     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       delete a middle cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  &x_plus                                                                                               p_equal     0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    5a,    3n,    3f,    3b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       try to add a cell using a NULL pointer                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__new                   NULL   , LINKED                                                                                       i_lesser    0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    5a,    3n,    3f,    3b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       try to delete a null pointer                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  &x_plus                                                                                               i_fail      0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    5a,    3n,    3f,    3b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       try to delete a null                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  NULL                                                                                                  i_fail      0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    5a,    3n,    3f,    3b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : y save     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       delete the last cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  &x_save                                                                                               i_pass      0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    4a,    2n,    2f,    2b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y head     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       delete the first cell                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  &x_head                                                                                               i_pass      0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    3a,    1n,    1f,    1b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : x out      -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       delete unlinked cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  &x_out                                                                                                i_pass      0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    2a,    1n,    1f,    1b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       delete the last cell again (illegal)                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete last cell                     CELL__free                  &x_out                                                                                                i_fail      0                                                                                                    
     get      ... check cell counts                CELL__unit_better           "n_count"      , NULL            , NULL           , -1                                                s_equal     CELLb count      :    2a,    1n,    1f,    1b                                                        
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_head          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_save          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_plus          , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_tail          , NULL           , -1                                                s_equal     CELLb source     : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by pointer                 CELL__unit_better           "p_source"     , x_out           , NULL           , -1                                                s_equal     CELLb source     : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  0                                                s_equal     CELLb entry ( 0) : y tail     -1t  -1c   -1r          -1   0[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  1                                                s_equal     CELLb entry ( 1) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  2                                                s_equal     CELLb entry ( 2) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  3                                                s_equal     CELLb entry ( 3) : - -         -t   -c    -r           -  --[]                                       
     get      ... check by sequence                CELL__unit_better           "s_entry"      , NULL            , NULL           ,  4                                                s_equal     CELLb entry ( 4) : - -         -t   -c    -r           -  --[]                                       

   COND       verify program teardown (still cant get last unlinked)             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_pass      0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (gyges_cell) creating and destroying attached cells                CELL__create, CELL__delete, CELL_dup                                                                  ((02.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)                                        
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0                                          

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a pointer to one cell         - - - - - - - - - - - - -   tCELL *x_1st  = NULL;                                                                                                                                                                                                      
     code     create a pointer to another          - - - - - - - - - - - - -   tCELL *x_2nd  = NULL;                                                                                                                                                                                                      
     code     create a pointer to another          - - - - - - - - - - - - -   tCELL *x_3rd  = NULL;                                                                                                                                                                                                      
     code     create a pointer to another          - - - - - - - - - - - - -   tCELL *x_dup  = NULL;                                                                                                                                                                                                      

   GROUP      test default empty set                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   GROUP      get a cell started                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add first cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__create                &x_1st ,    0,   10,   10                                                                             i_pass      0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   1, head=%9p, tail=%9p", x_1st , x_1st );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   2, num=   1, fore=   1, back=   1                                          

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   GROUP      add another                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add second cell                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__create                &x_2nd ,    0,   11,   10                                                                             i_pass      0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   2, head=%9p, tail=%9p", x_1st , x_2nd );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   3, num=   2, fore=   2, back=   2                                          

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", x_2nd);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  11, row=  10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   GROUP      add a third                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add third cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a cell                           CELL__create                &x_3rd ,   0,   12,   10                                                                              i_pass      0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   3, head=%9p, tail=%9p", x_1st , x_3rd );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   4, num=   3, fore=   3, back=   3                                          

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", x_2nd);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", x_3rd);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  11, row=  10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  12, row=  10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   GROUP      delete the last one                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       delete the last cell                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete cell                          CELL__delete                HIST_BEG , 0, 12, 10                                                                                  i_pass      0                                                                                                    
     code     null the pointer                     - - - - - - - - - - - - -   x_3rd  = NULL;                                                                                                                                                                                                             
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   2, head=%9p, tail=%9p", x_1st , x_2nd );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   3, num=   2, fore=   2, back=   2                                          

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", x_2nd);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  11, row=  10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   COND       duplicate the second cell                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     duplicate                            CELL_dup                    &x_dup  , x_2nd                                                                                       i_pass      0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   3, head=%9p, tail=%9p", x_1st , x_dup );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   4, num=   3, fore=   3, back=   3                                          

   COND       delete the second cell                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete cell                          CELL__delete                HIST_BEG , 0, 11, 10                                                                                  i_pass      0                                                                                                    
     code     null the pointer                     - - - - - - - - - - - - -   x_2nd  = NULL;                                                                                                                                                                                                             
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   2, head=%9p, tail=%9p", x_1st , x_dup );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   3, num=   2, fore=   2, back=   2                                          

   COND       hook up the duplicate                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     hook one to first cell               LOC_hook                    x_dup, 0, 1, 20                                                                                       i_equal     0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=   1, row=  20", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where"   , x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", x_dup);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=  10, row=  10", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=   1, row=  20", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   COND       delete the first cell                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete cell                          CELL__delete                HIST_BEG , 0, 10, 10                                                                                  i_pass      0                                                                                                    
     code     null the pointer                     - - - - - - - - - - - - -   x_1st  = NULL;                                                                                                                                                                                                             
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   1, head=%9p, tail=%9p", x_dup , x_dup );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   2, num=   1, fore=   1, back=   1                                          

   COND       delete a non-existant cell                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete cell                          CELL__delete                HIST_BEG , 0,  5, 10                                                                                  i_fail      0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   1, head=%9p, tail=%9p", x_dup , x_dup );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   2, num=   1, fore=   1, back=   1                                          

   COND       duplicate the second cell                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     duplicate                            CELL_dup                    &x_1st  , x_dup                                                                                       i_pass      0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell main list : num=   2, head=%9p, tail=%9p", x_dup , x_1st );                                                                                                                                       
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 s_equal     [[ CUSTOM ]]                                                                                         
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   3, num=   2, fore=   2, back=   2                                          

   COND       hook up the duplicate                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.025))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     hook one to first cell               LOC_hook                    x_1st, 0, 3, 16                                                                                       i_equal     0                                                                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=   3, row=  16", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where"   , x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific testing locations                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.026))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  10, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0k11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  11, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0l11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=  12, row=  10", NULL );                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0m11"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   1, row=  20", x_dup);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0b21"                                                                               s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "LOC occupant/who : ptr=%10p, tab=   0, col=   3, row=  16", x_1st);                                                                                                                                      
     get      check the sheet location             LOC__unit                   "loc_who"      , "0d17"                                                                               s_equal     [[ CUSTOM ]]                                                                                         

   COND       check specific cells                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.027))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=   3, row=  16", x_1st);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_1st                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_2nd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_2nd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab= -10, col= -10, row= -10", x_3rd);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_3rd                                                                                s_equal     [[ CUSTOM ]]                                                                                         
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (CUSTOM, "s_cell location  : ptr=%10p, tab=   0, col=   1, row=  20", x_dup);                                                                                                                                      
     get      check the cell's location            CELL__unit                  "cell_where",    x_dup                                                                                s_equal     [[ CUSTOM ]]                                                                                         

   COND       purge all cells                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.028))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     purge the cells                      CELL_purge                                                                                                                        i_pass      0                                                                                                    
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)                                        
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   1, num=   0, fore=   0, back=   0                                          

   COND       verify program teardown                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.029))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_pass      0                                                                                                    
     get      review the cell linked list          CELL__unit                  "cell_list",     NULL                                                                                 u_round/1   s_cell main list : num=   0, head=     (nil), tail=     (nil)                                        
     get      review the cell counts               CELL__unit                  "cell_count",    NULL                                                                                 s_equal     s_cell count     : all=   0, num=   0, fore=   0, back=   0                                          



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          single cell string formatting                                      CELL_printable                                                                                        ((03.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   GROUP      start very basic                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add a basic cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     create cell                          yVIKEYS_main_string         ":0j10¦··stest¦"                                                                                      i_equal     0                                                                                                    
     get      ... check source                     CELL__unitnew               "source"         , "0j10"                                                                             s_equal     s_celln source   : (   4) :test:                                                                     
     get      ... check value                      CELL__unitnew               "value"          , "0j10"                                                                             s_equal     s_celln value    :           0.000000                                                                
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test    :                                                                 

   COND       change the alignment (basics)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     right alignment                      yVIKEYS_main_string         "F>¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=> f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :   test :                                                                 
     exec     center alignment                     yVIKEYS_main_string         "F|¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=| f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :  test  :                                                                 
     exec     left alignment                       yVIKEYS_main_string         "F<¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test    :                                                                 

   COND       change the formatting (basics)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     dash fill                            yVIKEYS_main_string         "F-¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=< f=- d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test--- :                                                                 
     exec     space fill                           yVIKEYS_main_string         "F.¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=< f=. d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test··· :                                                                 
     exec     equal sign fill                      yVIKEYS_main_string         "F=¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=< f== d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test=== :                                                                 
     exec     underscore fill                      yVIKEYS_main_string         "F_¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=< f=_ d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test___ :                                                                 
     exec     empty fill                           yVIKEYS_main_string         "F!¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=s a=< f=! d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :test    :                                                                 

   GROUP      enlarge column                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       alter the cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change the width                     yVIKEYS_main_string         "FN¦"                                                                                                 i_equal     0                                                                                                    

   COND       change aligntment on dash fill                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     dash fill                            yVIKEYS_main_string         "F-¦"                                                                                                 i_equal     0                                                                                                    
     exec     right alignment                      yVIKEYS_main_string         "F>¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :-------test :                                                             
     exec     center alignment                     yVIKEYS_main_string         "F|¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :----test--- :                                                             
     exec     left alignment                       yVIKEYS_main_string         "F<¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :test------- :                                                             

   COND       change fills on center alignment                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     center alignment                     yVIKEYS_main_string         "F|¦"                                                                                                 i_equal     0                                                                                                    
     exec     space fill                           yVIKEYS_main_string         "F.¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :····test··· :                                                             
     exec     equal sign fill                      yVIKEYS_main_string         "F=¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :====test=== :                                                             
     exec     underscore fill                      yVIKEYS_main_string         "F_¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :____test___ :                                                             
     exec     empty fill                           yVIKEYS_main_string         "F!¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :    test    :                                                             

   GROUP      just fill the cell with text                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       alter the cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change the width                     yVIKEYS_main_string         "seleventeeny¦"                                                                                       i_equal     0                                                                                                    
     get      ... check source                     CELL__unitnew               "source"         , "0j10"                                                                             s_equal     s_celln source   : (  11) :eleventeeny:                                                              

   COND       change the alignment (basics)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     right alignment                      yVIKEYS_main_string         "F>¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             
     exec     center alignment                     yVIKEYS_main_string         "F|¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             
     exec     left alignment                       yVIKEYS_main_string         "F<¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             

   COND       change the formatting (basics)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     dash fill                            yVIKEYS_main_string         "F-¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             
     exec     space fill                           yVIKEYS_main_string         "F.¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             
     exec     equal sign fill                      yVIKEYS_main_string         "F=¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             
     exec     underscore fill                      yVIKEYS_main_string         "F_¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             
     exec     empty fill                           yVIKEYS_main_string         "F!¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :eleventeeny :                                                             

   GROUP      over fill the cell with text                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       alter the cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change the width                     yVIKEYS_main_string         "ssupercalafragalistic¦"                                                                              i_equal     0                                                                                                    
     get      ... check source                     CELL__unitnew               "source"         , "0j10"                                                                             s_equal     s_celln source   : (  20) :supercalafragalistic:                                                     

   COND       change the alignment (basics)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     right alignment                      yVIKEYS_main_string         "F>¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :<ragalistic :                                                             
     exec     center alignment                     yVIKEYS_main_string         "F|¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :<alafragal> :                                                             
     exec     left alignment                       yVIKEYS_main_string         "F<¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :supercalaf> :                                                             

   COND       change the formatting (basics)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     dash fill                            yVIKEYS_main_string         "F-¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :supercalaf> :                                                             
     exec     space fill                           yVIKEYS_main_string         "F.¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :supercalaf> :                                                             
     exec     equal sign fill                      yVIKEYS_main_string         "F=¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :supercalaf> :                                                             
     exec     underscore fill                      yVIKEYS_main_string         "F_¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :supercalaf> :                                                             
     exec     empty fill                           yVIKEYS_main_string         "F!¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  12) :supercalaf> :                                                             

   GROUP      specialty fills and alignments                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add a basic cell                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     create cell                          yVIKEYS_main_string         "stest¦"                                                                                              i_equal     0                                                                                                    
     get      ... check source                     CELL__unitnew               "source"         , "0j10"                                                                             s_equal     s_celln source   : (   4) :test:                                                                     

   COND       alter the cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change the width and fill            yVIKEYS_main_string         "Fw-¦"                                                                                                i_equal     0                                                                                                    

   COND       change the alignment (special)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     right colon alignment                yVIKEYS_main_string         "F:¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :test--------------: :                                                     
     exec     right brace alignment                yVIKEYS_main_string         "F[¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[test-------------] :                                                     
     exec     right indent alignment               yVIKEYS_main_string         "F{¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[--test-----------] :                                                     
     exec     center brace alignment               yVIKEYS_main_string         "F^¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[-------test------] :                                                     
     exec     left indent alignment                yVIKEYS_main_string         "F}¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[-----------test--] :                                                     
     exec     left brace alignment                 yVIKEYS_main_string         "F]¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[-------------test] :                                                     
     exec     left colon alignment                 yVIKEYS_main_string         "F'¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :--------------test: :                                                     

   COND       alter the cell                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change alignment                     yVIKEYS_main_string         "Fw^¦"                                                                                                i_equal     0                                                                                                    

   COND       change the formatting (basics)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     placeholder fill                     yVIKEYS_main_string         "F/¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[··¤··¤·test¤··¤··] :                                                     
     exec     big dot fill                         yVIKEYS_main_string         "F@¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[··´··´·test´··´··] :                                                     
     exec     arrow fill                           yVIKEYS_main_string         "Fq¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[·Ö·Ö·Ö·testÕ·Õ·Õ·] :                                                     
     exec     pluses fill                          yVIKEYS_main_string         "F+¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[···+···test··+···] :                                                     
     exec     empty fill                           yVIKEYS_main_string         "F!¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[       test      ] :                                                     
     exec     empty fill                           yVIKEYS_main_string         "F#¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :[2345678test345678] :                                                     

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program teardown                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_pass      0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          single cell numeric formatting                                     CELL_printable                                                                                        ((04.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   GROUP      start very basic                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add a basic, fractional cell                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     create cell                          yVIKEYS_main_string         ":0j10¦··+3.1415927¦"                                                                                 i_equal     0                                                                                                    
     get      ... check source                     CELL__unitnew               "source"         , "0j10"                                                                             s_equal     s_celln source   : (  10) :+3.1415927:                                                               
     get      ... check value                      CELL__unitnew               "value"          , "0j10"                                                                             s_equal     s_celln value    :           3.141593                                                                
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :      3 :                                                                 

   COND       change the alignment (basics)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     left alignment                       yVIKEYS_main_string         "F<¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :3       :                                                                 
     exec     center alignment                     yVIKEYS_main_string         "F|¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=| f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :   3    :                                                                 
     exec     right alignment                      yVIKEYS_main_string         "F>¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :      3 :                                                                 

   COND       change the formatting (basics)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change to float                      yVIKEYS_main_string         "Ff¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=f d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :      3 :                                                                 
     exec     change decimals                      yVIKEYS_main_string         "F2¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :   3.14 :                                                                 
     exec     change to integer                    yVIKEYS_main_string         "Fi¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=i d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :      3 :                                                                 
     exec     change to float w/3                  yVIKEYS_main_string         "Ff3¦"                                                                                                i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=f d=3 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) :  3.142 :                                                                 
     exec     change to exponential w/2            yVIKEYS_main_string         "Fe2¦"                                                                                                i_equal     0                                                                                                    
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=e d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (   8) : 3.14e0 :                                                                 

   COND       change to a large number                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change value                         yVIKEYS_main_string         "+123456789.87654321¦"                                                                                i_equal     0                                                                                                    
     exec     change to integer, no decimals       yVIKEYS_main_string         "Fi0¦"                                                                                                i_equal     0                                                                                                    
     exec     widen cell                           yVIKEYS_main_string         "Fw¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check source                     CELL__unitnew               "source"         , "0j10"                                                                             s_equal     s_celln source   : (  19) :+123456789.87654321:                                                      
     get      ... check value                      CELL__unitnew               "value"          , "0j10"                                                                             s_equal     s_celln value    :   123456789.876543                                                                
     get      ... check info                       CELL__unitnew               "info"           , "0j10"                                                                             s_equal     s_celln info     : t=n a=> f=i d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :          123456790 :                                                     

   COND       change the formatting (float)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change to float w/2                  yVIKEYS_main_string         "Ff2¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :       123456789.88 :                                                     
     exec     change to exponential w/5            yVIKEYS_main_string         "Fe5¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :          1.23457e8 :                                                     
     exec     change to delimited exponential      yVIKEYS_main_string         "FE¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :     +1.234'57 e+08 :                                                     
     exec     change to technical w/6 (wider)      yVIKEYS_main_string         "F;6L¦"                                                                                               i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :   123,456,789.876'543 + :                                                
     exec     change to accounting w/4             yVIKEYS_main_string         "Fa4¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :       123,456,789.8765_ :                                                
     exec     change to delimeted accounting       yVIKEYS_main_string         "FA¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :      123,456,789.876'5_ :                                                
     exec     change to comma                      yVIKEYS_main_string         "Fc¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :        123,456,789.8765 :                                                
     exec     change to delimeted comma            yVIKEYS_main_string         "FC¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :       123,456,789.876'5 :                                                
     exec     change to signed                     yVIKEYS_main_string         "Fs¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :       +123,456,789.8765 :                                                
     exec     change to delimeted signed           yVIKEYS_main_string         "FS¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :      +123,456,789.876'5 :                                                
     exec     change to currency                   yVIKEYS_main_string         "F$¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  25) :      $123,456,789.8765_ :                                                

   COND       change the formatting (binary)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change value                         yVIKEYS_main_string         "+2594¦"                                                                                              i_equal     0                                                                                                    
     exec     change to binary                     yVIKEYS_main_string         "Fb3w¦"                                                                                               i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :      b101000100010 :                                                     
     exec     change to delimited binary           yVIKEYS_main_string         "FB3¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :   b'1010'0010'0010 :                                                     

   COND       change the formatting (octal)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change value                         yVIKEYS_main_string         "+2595¦"                                                                                              i_equal     0                                                                                                    
     exec     change to octal                      yVIKEYS_main_string         "Fo2w¦"                                                                                               i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :            o005043 :                                                     
     exec     change to delimited octal            yVIKEYS_main_string         "FO2¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :          o'005'043 :                                                     

   COND       change the formatting (hex)                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change value                         yVIKEYS_main_string         "+5678765¦"                                                                                           i_equal     0                                                                                                    
     exec     change to hex (narrower)             yVIKEYS_main_string         "Fx4w¦"                                                                                               i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :          x0056a6ad :                                                     
     exec     change to delimited hex              yVIKEYS_main_string         "FX4¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :      x'00'56'a6'ad :                                                     

   COND       change the formatting (mongo)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change value                         yVIKEYS_main_string         "+5678765678765¦"                                                                                     i_equal     0                                                                                                    
     exec     change to mongo                      yVIKEYS_main_string         "Fz2¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :          °1BYCS42N :                                                     
     exec     change to delimited mongo            yVIKEYS_main_string         "FZ2¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :        °'1BYC'S42N :                                                     

   COND       change the formatting (roman)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     change value                         yVIKEYS_main_string         "+259¦"                                                                                               i_equal     0                                                                                                    
     exec     change to binary                     yVIKEYS_main_string         "Frw¦"                                                                                                i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :              cclix :                                                     
     exec     change to delimited binary           yVIKEYS_main_string         "FR¦"                                                                                                 i_equal     0                                                                                                    
     get      ... check printable                  CELL__unitnew               "printable"      , "0j10"                                                                             s_equal     s_celln print    : (  20) :              CCLIX :                                                     

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program teardown                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_pass      0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (CELL) verify basic cell record reading                            CELL_reader                                                                                           ((05.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     create a record holder               - - - - - - - - - - - - -   char  x_temp [LEN_RECD];                                                                                                                                                                                                   

   GROUP      initial conditions                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   GROUP      add a first numeric cell                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       open input                                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     open using stdin                     yPARSE_stdin                                                                                                                      i_equal     0                                                                                                    

   COND       prepare the line                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     clear everything                     yPARSE_purge_in                                                                                                                   i_equal     0                                                                                                    
     load     add a line to stdin                  stdin                       cell         § 0a1          § -     § 10 §¦                                                                                                                                                                                
     exec     read the record                      yPARSE_read                 NULL, NULL                                                                                            i_equal     1                                                                                                    

   COND       process a cell record                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call cell reader                     CELL_reader                                                                                                                       i_equal     1                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   2) :10:                                                                       
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   GROUP      add a simple numeric formula                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       prepare the line                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     clear everything                     yPARSE_purge_in                                                                                                                   i_equal     0                                                                                                    
     load     add a line to stdin                  stdin                       cell         § 0b2          § >f2-- § = 0a1 * 2 §¦                                                                                                                                                                         
     exec     read the record                      yPARSE_read                 NULL, NULL                                                                                            i_equal     1                                                                                                    

   COND       process a cell record                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call cell reader                     CELL_reader                                                                                                                       i_equal     1                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   2) :10:                                                                       
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   GROUP      add a string                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       prepare the line                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     clear everything                     yPARSE_purge_in                                                                                                                   i_equal     0                                                                                                    
     load     add a line to stdin                  stdin                       cell         § 1c3          § <?0-- § testing §¦                                                                                                                                                                           
     exec     read the record                      yPARSE_read                 NULL, NULL                                                                                            i_equal     1                                                                                                    

   COND       process a cell record                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call cell reader                     CELL_reader                                                                                                                       i_equal     1                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   2) :10:                                                                       
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (   7) :testing:                                                                  
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   GROUP      add a string formula                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       prepare the line                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     clear everything                     yPARSE_purge_in                                                                                                                   i_equal     0                                                                                                    
     load     add a line to stdin                  stdin                       cell         § 5f1          § |?0-- § # 1c3 §¦                                                                                                                                                                             
     exec     read the record                      yPARSE_read                 NULL, NULL                                                                                            i_equal     1                                                                                                    

   COND       process a cell record                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call cell reader                     CELL_reader                                                                                                                       i_equal     1                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : t=# a=| f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   2) :10:                                                                       
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (   7) :testing:                                                                  
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (   5) :# 1c3:                                                                    

   COND       verify program teardown                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (CELL) verify basic cell record writing                            CELL_writer, CELL_writer_all                                                                          ((06.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     create a cell holder                 - - - - - - - - - - - - -   tCELL *x_1st  = NULL;                                                                                                                                                                                                      
     code     create a cell holder                 - - - - - - - - - - - - -   tCELL *x_2nd  = NULL;                                                                                                                                                                                                      
     code     create a cell holder                 - - - - - - - - - - - - -   tCELL *x_3rd  = NULL;                                                                                                                                                                                                      
     code     create a cell holder                 - - - - - - - - - - - - -   tCELL *x_4th  = NULL;                                                                                                                                                                                                      
     code     create a cell holder                 - - - - - - - - - - - - -   tCELL *x_5th  = NULL;                                                                                                                                                                                                      

   GROUP      initial conditions                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   COND       write cell info                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the cell handler                CELL_writer                 x_1st                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_2nd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_3rd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_4th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_5th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     write all output                     CELL_writer_all                                                                                                                   i_equal     0                                                                                                    

   GROUP      add a first numeric cell                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add the cell                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     process keys                         yVIKEYS_main_string         ":0a1¦··+10¦"                                                                                         i_equal     0                                                                                                    
     exec     capture pointer                      LOC_cell_labeled            "0a1"                                                                                                 p_exists    0                                                                                                     p  x_1st                

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   3) :+10:                                                                      
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   COND       write cell info                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the cell handler                CELL_writer                 x_1st                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0a1          § ??0--      § +10 §                                                     
     exec     call the cell handler                CELL_writer                 x_2nd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_3rd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_4th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_5th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     write all output                     CELL_writer_all                                                                                                                   i_equal     1                                                                                                    

   GROUP      add a simple numeric formula                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add the cell                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     process keys                         yVIKEYS_main_string         ":0b2¦··= 0a1 * 2¦"                                                                                   i_equal     0                                                                                                    
     exec     capture pointer                      LOC_cell_labeled            "0b2"                                                                                                 p_exists    0                                                                                                     p  x_2nd                
     exec     process keys                         yVIKEYS_main_string         "F>f2¦¥"                                                                                              i_equal     0                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   3) :+10:                                                                      
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   COND       write cell info                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the cell handler                CELL_writer                 x_1st                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0a1          § ??0--      § +10 §                                                     
     exec     call the cell handler                CELL_writer                 x_2nd                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0b2          § >f2--      § =²0a1²*²2 §                                               
     exec     call the cell handler                CELL_writer                 x_3rd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_4th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_5th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     write all output                     CELL_writer_all                                                                                                                   i_equal     2                                                                                                    

   GROUP      add a string                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add the cell                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     process keys                         yVIKEYS_main_string         ":1c3¦··stesting¦"                                                                                    i_equal     0                                                                                                    
     exec     capture pointer                      LOC_cell_labeled            "1c3"                                                                                                 p_exists    0                                                                                                     p  x_4th                
     exec     process keys                         yVIKEYS_main_string         "F<¦¥"                                                                                                i_equal     0                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   3) :+10:                                                                      
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (   7) :testing:                                                                  
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   COND       write cell info                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the cell handler                CELL_writer                 x_1st                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0a1          § ??0--      § +10 §                                                     
     exec     call the cell handler                CELL_writer                 x_2nd                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0b2          § >f2--      § =²0a1²*²2 §                                               
     exec     call the cell handler                CELL_writer                 x_3rd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_4th                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 1c3          § <?0--      § testing §                                                 
     exec     call the cell handler                CELL_writer                 x_5th                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     write all output                     CELL_writer_all                                                                                                                   i_equal     3                                                                                                    

   GROUP      add a string formula                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add the cell                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     process keys                         yVIKEYS_main_string         ":5f1¦··# 1c3¦"                                                                                       i_equal     0                                                                                                    
     exec     capture pointer                      LOC_cell_labeled            "5f1"                                                                                                 p_exists    0                                                                                                     p  x_5th                
     exec     process keys                         yVIKEYS_main_string         "F|¦¥"                                                                                                i_equal     0                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : t=# a=| f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   3) :+10:                                                                      
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (   7) :testing:                                                                  
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (   5) :# 1c3:                                                                    

   COND       write cell info                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the cell handler                CELL_writer                 x_1st                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0a1          § ??0--      § +10 §                                                     
     exec     call the cell handler                CELL_writer                 x_2nd                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 0b2          § >f2--      § =²0a1²*²2 §                                               
     exec     call the cell handler                CELL_writer                 x_3rd                                                                                                 i_equal     0                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal                                                                                                          
     exec     call the cell handler                CELL_writer                 x_4th                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 1c3          § <?0--      § testing §                                                 
     exec     call the cell handler                CELL_writer                 x_5th                                                                                                 i_equal     1                                                                                                    
     exec     check the result                     yPARSE_outrecd                                                                                                                    s_equal     cell         § 5f1          § |?0--      § #²1c3 §                                                   
     exec     write all output                     CELL_writer_all                                                                                                                   i_equal     4                                                                                                    

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program teardown                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (CELL) verify combinations writing and reading with file           CELL_writer, CELL_reader                                                                              ((07.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program setup                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     setup the program                    PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     create a record holder               - - - - - - - - - - - - -   char  x_temp [LEN_RECD];                                                                                                                                                                                                   

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   GROUP      make changes to cells                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       update cells                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     process keys                         yVIKEYS_main_string         ":0a1¦··+10¦"                                                                                         i_equal     0                                                                                                    
     exec     process keys                         yVIKEYS_main_string         ":0b2¦··= 0a1 * 2¦··F>f2¦¥"                                                                           i_equal     0                                                                                                    
     exec     process keys                         yVIKEYS_main_string         ":1c3¦··stesting¦··F<¦¥"                                                                              i_equal     0                                                                                                    
     exec     process keys                         yVIKEYS_main_string         ":5f1¦··# 1c3¦··F|¦¥"                                                                                 i_equal     0                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : t=# a=| f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   3) :+10:                                                                      
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (   7) :testing:                                                                  
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (   5) :# 1c3:                                                                    

   COND       write the cells                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     open input                           yPARSE_open_out             "/tmp/gyges_test.txt", NULL, NULL                                                                     i_equal     0                                                                                                    
     exec     write all output                     CELL_writer_all                                                                                                                   i_equal     4                                                                                                    
     exec     close input                          yPARSE_close_out                                                                                                                  i_equal     0                                                                                                    

   GROUP      reset cells                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       reset cells                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     purge the cells                      CELL_purge                                                                                                                        i_pass      0                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (----) ::                                                                         

   GROUP      read from file                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       read the cols                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     open input                           yPARSE_open_in              "/tmp/gyges_test.txt"                                                                                 i_equal     0                                                                                                    
     exec     read all lines                       yPARSE_read_all                                                                                                                   i_equal     4                                                                                                    
     exec     close input                          yPARSE_close_in                                                                                                                   i_equal     0                                                                                                    

   COND       review cell information                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell info                      CELL__unitnew               "info"           , "0a1"                                                                              s_equal     s_celln info     : t=n a=? f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0b2"                                                                              s_equal     s_celln info     : t== a=> f=f d=2 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "0c3"                                                                              s_equal     s_celln info     : --- --- --- --- --- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "1c3"                                                                              s_equal     s_celln info     : t=s a=< f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               
     get      check cell info                      CELL__unitnew               "info"           , "5f1"                                                                              s_equal     s_celln info     : t=# a=| f=? d=0 u=- ¬¬¬ ¬¬¬¬¬ ¬¬¬¬¬                                               

   COND       review cell contents                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check cell contents                  CELL__unitnew               "source"         , "0a1"                                                                              s_equal     s_celln source   : (   3) :+10:                                                                      
     get      check cell contents                  CELL__unitnew               "source"         , "0b2"                                                                              s_equal     s_celln source   : (   9) := 0a1 * 2:                                                                
     get      check cell contents                  CELL__unitnew               "source"         , "0c3"                                                                              s_equal     s_celln source   : (----) ::                                                                         
     get      check cell contents                  CELL__unitnew               "source"         , "1c3"                                                                              s_equal     s_celln source   : (   7) :testing:                                                                  
     get      check cell contents                  CELL__unitnew               "source"         , "5f1"                                                                              s_equal     s_celln source   : (   5) :# 1c3:                                                                    

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify program teardown                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  PROG__unit_end                                                                                                                    i_equal     0                                                                                                    



# end-of-file
